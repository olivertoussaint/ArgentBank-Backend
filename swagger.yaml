swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user signup
      parameters:
        - in: body
          name: body
          description: Signup payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error
  /accounts:
    get:
      tags:
        - Accounts Module
      summary: Fetch all accounts
      description: API to fetch all accounts
      produces:
        - application/json
      responses:
        '200':
          description: Accounts fetched successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        '500':
          description: Internal server error
  /accounts/{accountId}:
    get:
      tags:
        - Accounts Module
      summary: Fetch account details
      description: API to fetch account details by ID
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the account
      produces:
        - application/json
      responses:
        '200':
          description: Account fetched successfully
          schema:
            $ref: '#/definitions/AccountWithTransactions'
        '404':
          description: Account not found
        '500':
          description: Internal server error
  /accounts/{accountId}/transactions:
    get:
      tags:
        - Transactions Module
      summary: Fetch transactions by account ID
      description: API to fetch all transactions for a specific account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the account
      produces:
        - application/json
      responses:
        '200':
          description: Transactions fetched successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '404':
          description: Account not found
        '500':
          description: Internal server error
  /accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - Transactions Module
      summary: Fetch transaction details
      description: API to fetch details of a specific transaction for an account
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
      produces:
        - application/json
      responses:
        '200':
          description: Transaction fetched successfully
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
  Login:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  Account:
    type: object
    properties:
      accountId:
        type: string
      transactionsCount:
        type: integer
  AccountWithTransactions:
    type: object
    properties:
      accountId:
        type: string
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      amount:
        type: number
      description:
        type: string
      balance:
        type: number
